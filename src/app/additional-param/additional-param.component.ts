import {Component, ElementRef, ViewChild} from '@angular/core';
import {DataSource} from '@angular/cdk';
import {BehaviorSubject} from 'rxjs/BehaviorSubject';
import {Observable} from 'rxjs/Observable';
import 'rxjs/add/operator/startWith';
import 'rxjs/add/observable/merge';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/debounceTime';
import 'rxjs/add/operator/distinctUntilChanged';
import 'rxjs/add/observable/fromEvent';

@Component({
  selector: 'app-additional-param',
  templateUrl: './additional-param.component.html',
  styleUrls: ['./additional-param.component.css']
})
export class AdditionalParamComponent {
  displayedColumns = ['view_name', 'value'];
  exampleDatabase = new ExampleDatabase();
  dataSource: ExampleDataSource | null;

  @ViewChild('filter') filter: ElementRef;

  ngOnInit() {
    this.dataSource = new ExampleDataSource(this.exampleDatabase);
    Observable.fromEvent(this.filter.nativeElement, 'keyup')
        .debounceTime(150)
        .distinctUntilChanged()
        .subscribe(() => {
          if (!this.dataSource) { return; }
          this.dataSource.filter = this.filter.nativeElement.value;
        });
  }
}

/** Constants used to fill up our data base. */
const NAMES = [
  'SEQUENCE_INTERNAL_EXCLUDED_REGION', 
  'SEQUENCE_INCLUDED_REGION',
  'SEQUENCE_FORCE_LEFT_END', 
  'SEQUENCE_QUALITY', 
  'SEQUENCE_FORCE_LEFT_START', 
  'SEQUENCE_START_CODON_POSITION', 
  'SEQUENCE_FORCE_RIGHT_END', 
  'SEQUENCE_OVERLAP_JUNCTION_LIST', 
  'SEQUENCE_FORCE_RIGHT_START', 
  'SEQUENCE_ID', 
  'SEQUENCE_PRIMER_PAIR_OK_REGION_LIST', 
  'PRIMER_DNA_CONC', 
  'PRIMER_MAX_END_GC', 
  'PRIMER_PAIR_WT_PRODUCT_SIZE_LT', 
  'PRIMER_DNTP_CONC', 
  'PRIMER_MAX_END_STABILITY', 
  'PRIMER_PAIR_WT_PRODUCT_TM_GT', 
  'PRIMER_EXPLAIN_FLAG', 
  'PRIMER_MAX_GC', 
  'PRIMER_PAIR_WT_PRODUCT_TM_LT', 
  'PRIMER_FIRST_BASE_INDEX', 
  'PRIMER_MAX_HAIRPIN_TH', 
  'PRIMER_PAIR_WT_PR_PENALTY', 
  'PRIMER_GC_CLAMP', 
  'PRIMER_MAX_LIBRARY_MISPRIMING', 
  'PRIMER_PAIR_WT_TEMPLATE_MISPRIMING', 
  'PRIMER_INSIDE_PENALTY', 
  'PRIMER_MAX_NS_ACCEPTED', 
  'PRIMER_PAIR_WT_TEMPLATE_MISPRIMING_TH', 
  'PRIMER_INTERNAL_DNA_CONC', 
  'PRIMER_MAX_POLY_X', 
  'PRIMER_PICK_ANYWAY', 
  'PRIMER_INTERNAL_DNTP_CONC', 
  'PRIMER_MAX_SELF_ANY', 
  'PRIMER_INTERNAL_MAX_GC', 
  'PRIMER_MAX_SELF_ANY_TH', 
  'PRIMER_INTERNAL_MAX_HAIRPIN_TH', 
  'PRIMER_MAX_SELF_END', 
  'PRIMER_INTERNAL_MAX_LIBRARY_MISHYB', 
  'PRIMER_MAX_SELF_END_TH', 
  'PRIMER_PRODUCT_MAX_TM', 
  'PRIMER_INTERNAL_MAX_NS_ACCEPTED', 
  'PRIMER_MAX_SIZE', 
  'PRIMER_PRODUCT_MIN_TM', 
  'PRIMER_INTERNAL_MAX_POLY_X', 
  'PRIMER_MAX_TEMPLATE_MISPRIMING', 
  'PRIMER_PRODUCT_OPT_SIZE', 
  'PRIMER_INTERNAL_MAX_SELF_ANY', 
  'PRIMER_MAX_TEMPLATE_MISPRIMING_TH', 
  'PRIMER_PRODUCT_OPT_TM', 
  'PRIMER_INTERNAL_MAX_SELF_ANY_TH', 
  'PRIMER_INTERNAL_MAX_SELF_END', 
  'PRIMER_MIN_3_PRIME_OVERLAP_OF_JUNCTION', 
  'PRIMER_QUALITY_RANGE_MAX', 
  'PRIMER_INTERNAL_MAX_SELF_END_TH', 
  'PRIMER_MIN_5_PRIME_OVERLAP_OF_JUNCTION', 
  'PRIMER_QUALITY_RANGE_MIN', 
  'PRIMER_INTERNAL_MAX_SIZE', 
  'PRIMER_MIN_END_QUALITY', 
  'PRIMER_INTERNAL_MAX_TM', 
  'PRIMER_MIN_GC', 
  'PRIMER_SALT_DIVALENT', 
  'PRIMER_INTERNAL_MIN_GC', 
  'PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE', 
  'PRIMER_SALT_MONOVALENT', 
  'PRIMER_INTERNAL_MIN_QUALITY', 
  'PRIMER_MIN_QUALITY', 
  'PRIMER_SEQUENCING_ACCURACY', 
  'PRIMER_INTERNAL_MIN_SIZE', 
  'PRIMER_MIN_RIGHT_THREE_PRIME_DISTANCE', 
  'PRIMER_SEQUENCING_INTERVAL', 
  'PRIMER_INTERNAL_MIN_TM', 
  'PRIMER_MIN_SIZE', 
  'PRIMER_SEQUENCING_LEAD', 
  'PRIMER_INTERNAL_MISHYB_LIBRARY', 
  'PRIMER_MIN_THREE_PRIME_DISTANCE', 
  'PRIMER_SEQUENCING_SPACING', 
  'PRIMER_INTERNAL_MUST_MATCH_FIVE_PRIME', 
  'PRIMER_TASK', 
  'PRIMER_INTERNAL_MUST_MATCH_THREE_PRIME', 
  'PRIMER_MISPRIMING_LIBRARY', 
  'PRIMER_THERMODYNAMIC_OLIGO_ALIGNMENT', 
  'PRIMER_INTERNAL_OPT_GC_PERCENT', 
  'PRIMER_MUST_MATCH_FIVE_PRIME', 
  'PRIMER_THERMODYNAMIC_PARAMETERS_PATH', 
  'PRIMER_INTERNAL_OPT_SIZE', 
  'PRIMER_MUST_MATCH_THREE_PRIME', 
  'PRIMER_THERMODYNAMIC_TEMPLATE_ALIGNMENT', 
  'PRIMER_INTERNAL_OPT_TM', 
  'PRIMER_NUM_RETURN', 
  'PRIMER_INTERNAL_SALT_DIVALENT', 
  'PRIMER_OPT_GC_PERCENT', 
  'PRIMER_WT_END_QUAL', 
  'PRIMER_INTERNAL_SALT_MONOVALENT', 
  'PRIMER_OPT_SIZE', 
  'PRIMER_WT_END_STABILITY', 
  'PRIMER_INTERNAL_WT_END_QUAL', 
  'PRIMER_WT_GC_PERCENT_GT', 
  'PRIMER_INTERNAL_WT_GC_PERCENT_GT', 
  'PRIMER_OUTSIDE_PENALTY', 
  'PRIMER_WT_GC_PERCENT_LT', 
  'PRIMER_INTERNAL_WT_GC_PERCENT_LT', 
  'PRIMER_PAIR_MAX_COMPL_ANY', 
  'PRIMER_WT_HAIRPIN_TH', 
  'PRIMER_INTERNAL_WT_HAIRPIN_TH', 
  'PRIMER_PAIR_MAX_COMPL_ANY_TH', 
  'PRIMER_WT_LIBRARY_MISPRIMING', 
  'PRIMER_INTERNAL_WT_LIBRARY_MISHYB', 
  'PRIMER_PAIR_MAX_COMPL_END', 
  'PRIMER_WT_NUM_NS', 
  'PRIMER_INTERNAL_WT_NUM_NS', 
  'PRIMER_PAIR_MAX_COMPL_END_TH', 
  'PRIMER_WT_POS_PENALTY', 
  'PRIMER_INTERNAL_WT_SELF_ANY', 
  'PRIMER_WT_SELF_ANY', 
  'PRIMER_INTERNAL_WT_SELF_ANY_TH', 
  'PRIMER_PAIR_MAX_LIBRARY_MISPRIMING', 
  'PRIMER_WT_SELF_ANY_TH', 
  'PRIMER_INTERNAL_WT_SELF_END', 
  'PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING', 
  'PRIMER_WT_SELF_END', 
  'PRIMER_INTERNAL_WT_SELF_END_TH', 
  'PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING_TH', 
  'PRIMER_WT_SELF_END_TH', 
  'PRIMER_INTERNAL_WT_SEQ_QUAL', 
  'PRIMER_PAIR_WT_COMPL_ANY', 
  'PRIMER_WT_SEQ_QUAL', 
  'PRIMER_INTERNAL_WT_SIZE_GT', 
  'PRIMER_PAIR_WT_COMPL_ANY_TH', 
  'PRIMER_WT_SIZE_GT', 
  'PRIMER_INTERNAL_WT_SIZE_LT', 
  'PRIMER_PAIR_WT_COMPL_END', 
  'PRIMER_WT_SIZE_LT', 
  'PRIMER_INTERNAL_WT_TM_GT', 
  'PRIMER_PAIR_WT_COMPL_END_TH', 
  'PRIMER_WT_TEMPLATE_MISPRIMING', 
  'PRIMER_INTERNAL_WT_TM_LT', 
  'PRIMER_PAIR_WT_DIFF_TM', 
  'PRIMER_WT_TEMPLATE_MISPRIMING_TH', 
  'PRIMER_LIBERAL_BASE', 
  'PRIMER_PAIR_WT_IO_PENALTY', 
  'PRIMER_WT_TM_GT', 
  'PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS', 
  'PRIMER_PAIR_WT_LIBRARY_MISPRIMING', 
  'PRIMER_WT_TM_LT', 
  'PRIMER_LOWERCASE_MASKING', 
  'PRIMER_PAIR_WT_PRODUCT_SIZE_GT'];

const VIEW_NAMES = [
  'SEQUENCE INTERNAL EXCLUDED REGION', 
  'SEQUENCE INCLUDED REGION',
  'SEQUENCE FORCE LEFT END', 
  'SEQUENCE QUALITY', 
  'SEQUENCE FORCE LEFT START', 
  'SEQUENCE START CODON POSITION', 
  'SEQUENCE FORCE RIGHT END', 
  'SEQUENCE OVERLAP JUNCTION LIST', 
  'SEQUENCE FORCE RIGHT START', 
  'SEQUENCE ID', 
  'SEQUENCE PRIMER PAIR OK REGION LIST', 
  'PRIMER DNA CONC', 
  'PRIMER MAX END GC', 
  'PRIMER PAIR WT PRODUCT SIZE LT', 
  'PRIMER DNTP CONC', 
  'PRIMER MAX END STABILITY', 
  'PRIMER PAIR WT PRODUCT TM GT', 
  'PRIMER EXPLAIN FLAG', 
  'PRIMER MAX GC', 
  'PRIMER PAIR WT PRODUCT TM LT', 
  'PRIMER FIRST BASE INDEX', 
  'PRIMER MAX HAIRPIN TH', 
  'PRIMER PAIR WT PR PENALTY', 
  'PRIMER GC CLAMP', 
  'PRIMER MAX LIBRARY MISPRIMING', 
  'PRIMER PAIR WT TEMPLATE MISPRIMING', 
  'PRIMER INSIDE PENALTY', 
  'PRIMER MAX NS ACCEPTED', 
  'PRIMER PAIR WT TEMPLATE MISPRIMING TH', 
  'PRIMER INTERNAL DNA CONC', 
  'PRIMER MAX POLY X', 
  'PRIMER PICK ANYWAY', 
  'PRIMER INTERNAL DNTP CONC', 
  'PRIMER MAX SELF ANY', 
  'PRIMER INTERNAL MAX GC', 
  'PRIMER MAX SELF ANY TH', 
  'PRIMER INTERNAL MAX HAIRPIN TH', 
  'PRIMER MAX SELF END', 
  'PRIMER INTERNAL MAX LIBRARY MISHYB', 
  'PRIMER MAX SELF END TH', 
  'PRIMER PRODUCT MAX TM', 
  'PRIMER INTERNAL MAX NS ACCEPTED', 
  'PRIMER MAX SIZE', 
  'PRIMER PRODUCT MIN TM', 
  'PRIMER INTERNAL MAX POLY X', 
  'PRIMER MAX TEMPLATE MISPRIMING', 
  'PRIMER PRODUCT OPT SIZE', 
  'PRIMER INTERNAL MAX SELF ANY', 
  'PRIMER MAX TEMPLATE MISPRIMING TH', 
  'PRIMER PRODUCT OPT TM', 
  'PRIMER INTERNAL MAX SELF ANY TH', 
  'PRIMER INTERNAL MAX SELF END', 
  'PRIMER MIN 3 PRIME OVERLAP OF JUNCTION', 
  'PRIMER QUALITY RANGE MAX', 
  'PRIMER INTERNAL MAX SELF END TH', 
  'PRIMER MIN 5 PRIME OVERLAP OF JUNCTION', 
  'PRIMER QUALITY RANGE MIN', 
  'PRIMER INTERNAL MAX SIZE', 
  'PRIMER MIN END QUALITY', 
  'PRIMER INTERNAL MAX TM', 
  'PRIMER MIN GC', 
  'PRIMER SALT DIVALENT', 
  'PRIMER INTERNAL MIN GC', 
  'PRIMER MIN LEFT THREE PRIME DISTANCE', 
  'PRIMER SALT MONOVALENT', 
  'PRIMER INTERNAL MIN QUALITY', 
  'PRIMER MIN QUALITY', 
  'PRIMER SEQUENCING ACCURACY', 
  'PRIMER INTERNAL MIN SIZE', 
  'PRIMER MIN RIGHT THREE PRIME DISTANCE', 
  'PRIMER SEQUENCING INTERVAL', 
  'PRIMER INTERNAL MIN TM', 
  'PRIMER MIN SIZE', 
  'PRIMER SEQUENCING LEAD', 
  'PRIMER INTERNAL MISHYB LIBRARY', 
  'PRIMER MIN THREE PRIME DISTANCE', 
  'PRIMER SEQUENCING SPACING', 
  'PRIMER INTERNAL MUST MATCH FIVE PRIME', 
  'PRIMER TASK', 
  'PRIMER INTERNAL MUST MATCH THREE PRIME', 
  'PRIMER MISPRIMING LIBRARY', 
  'PRIMER THERMODYNAMIC OLIGO ALIGNMENT', 
  'PRIMER INTERNAL OPT GC PERCENT', 
  'PRIMER MUST MATCH FIVE PRIME', 
  'PRIMER THERMODYNAMIC PARAMETERS PATH', 
  'PRIMER INTERNAL OPT SIZE', 
  'PRIMER MUST MATCH THREE PRIME', 
  'PRIMER THERMODYNAMIC TEMPLATE ALIGNMENT', 
  'PRIMER INTERNAL OPT TM', 
  'PRIMER NUM RETURN', 
  'PRIMER INTERNAL SALT DIVALENT', 
  'PRIMER OPT GC PERCENT', 
  'PRIMER WT END QUAL', 
  'PRIMER INTERNAL SALT MONOVALENT', 
  'PRIMER OPT SIZE', 
  'PRIMER WT END STABILITY', 
  'PRIMER INTERNAL WT END QUAL', 
  'PRIMER WT GC PERCENT GT', 
  'PRIMER INTERNAL WT GC PERCENT GT', 
  'PRIMER OUTSIDE PENALTY', 
  'PRIMER WT GC PERCENT LT', 
  'PRIMER INTERNAL WT GC PERCENT LT', 
  'PRIMER PAIR MAX COMPL ANY', 
  'PRIMER WT HAIRPIN TH', 
  'PRIMER INTERNAL WT HAIRPIN TH', 
  'PRIMER PAIR MAX COMPL ANY TH', 
  'PRIMER WT LIBRARY MISPRIMING', 
  'PRIMER INTERNAL WT LIBRARY MISHYB', 
  'PRIMER PAIR MAX COMPL END', 
  'PRIMER WT NUM NS', 
  'PRIMER INTERNAL WT NUM NS', 
  'PRIMER PAIR MAX COMPL END TH', 
  'PRIMER WT POS PENALTY', 
  'PRIMER INTERNAL WT SELF ANY', 
  'PRIMER WT SELF ANY', 
  'PRIMER INTERNAL WT SELF ANY TH', 
  'PRIMER PAIR MAX LIBRARY MISPRIMING', 
  'PRIMER WT SELF ANY TH', 
  'PRIMER INTERNAL WT SELF END', 
  'PRIMER PAIR MAX TEMPLATE MISPRIMING', 
  'PRIMER WT SELF END', 
  'PRIMER INTERNAL WT SELF END TH', 
  'PRIMER PAIR MAX TEMPLATE MISPRIMING TH', 
  'PRIMER WT SELF END TH', 
  'PRIMER INTERNAL WT SEQ QUAL', 
  'PRIMER PAIR WT COMPL ANY', 
  'PRIMER WT SEQ QUAL', 
  'PRIMER INTERNAL WT SIZE GT', 
  'PRIMER PAIR WT COMPL ANY TH', 
  'PRIMER WT SIZE GT', 
  'PRIMER INTERNAL WT SIZE LT', 
  'PRIMER PAIR WT COMPL END', 
  'PRIMER WT SIZE LT', 
  'PRIMER INTERNAL WT TM GT', 
  'PRIMER PAIR WT COMPL END TH', 
  'PRIMER WT TEMPLATE MISPRIMING', 
  'PRIMER INTERNAL WT TM LT', 
  'PRIMER PAIR WT DIFF TM', 
  'PRIMER WT TEMPLATE MISPRIMING TH', 
  'PRIMER LIBERAL BASE', 
  'PRIMER PAIR WT IO PENALTY', 
  'PRIMER WT TM GT', 
  'PRIMER LIB AMBIGUITY CODES CONSENSUS', 
  'PRIMER PAIR WT LIBRARY MISPRIMING', 
  'PRIMER WT TM LT', 
  'PRIMER LOWERCASE MASKING', 
  'PRIMER PAIR WT PRODUCT SIZE GT'
];

export interface UserData {
  name: string;
  view_name: string;
  value: string;
}


/** An example database that the data source uses to retrieve data for the table. */
export class ExampleDatabase {
  /** Stream that emits whenever the data has been modified. */
  dataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);
  get data(): UserData[] { return this.dataChange.value; }

  constructor() {
    // Fill up the database with parameters.
    for (let i = 0; i < NAMES.length; i++) { 
      this.addUser(i); 
    }
  }

  /** Adds a new user to the database. */
  addUser(i) {
    const copiedData = this.data.slice();
    var newSection = {
      view_name: VIEW_NAMES[i],
      name: NAMES[i],
      value: ""
    }
    copiedData.push(newSection);
    this.dataChange.next(copiedData);
  }
}

/**
 * Data source to provide what data should be rendered in the table. Note that the data source
 * can retrieve its data in any way. In this case, the data source is provided a reference
 * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage
 * the underlying data. Instead, it only needs to take the data and send the table exactly what
 * should be rendered.
 */
export class ExampleDataSource extends DataSource<any> {
  _filterChange = new BehaviorSubject('');
  get filter(): string { return this._filterChange.value; }
  set filter(filter: string) { this._filterChange.next(filter); }

  constructor(private _exampleDatabase: ExampleDatabase) {
    super();
  }

  /** Connect function called by the table to retrieve one stream containing the data to render. */
  connect(): Observable<UserData[]> {
    const displayDataChanges = [
      this._exampleDatabase.dataChange,
      this._filterChange,
    ];

    return Observable.merge(...displayDataChanges).map(() => {
      return this._exampleDatabase.data.slice().filter((item: UserData) => {
        let searchStr = (item.name+item.view_name).toLowerCase();
        return searchStr.indexOf(this.filter.toLowerCase()) != -1;
      });
    });
  }

  disconnect() {}
}

